<implementation>
	<specVersion>
		<major>1</major>
		<minor>0</minor>
	</specVersion>
	<settings>
		<protocol>crlf</protocol>
	</settings>
	<files>L_Harmony.lua</files>
    <incoming>
		<lua>Harmony_Incoming(lul_data)</lua>
    </incoming>
	<startup>Harmony_init</startup>
	<actionList>
	<action>
		<serviceId>urn:rboer-com:serviceId:Harmony1</serviceId>
		<name>ForceUpdateConfiguration</name>
		<job>
			Harmony_UpdateConfigurations()
			return 4,nil
		</job>
		<jobname>StartActivity</jobname>
    </action>
	<action>
		<serviceId>urn:rboer-com:serviceId:Harmony1</serviceId>
		<name>PowerOff</name>
		<job>
			Harmony_PowerOff()
			return 4,nil
		</job>
		<jobname>StartActivity</jobname>
    </action>
	<action>
		<serviceId>urn:rboer-com:serviceId:Harmony1</serviceId>
		<name>StartActivity</name>
		<job>
			Harmony_StartActivity(lul_settings.newActivityID or "")
			return 4,nil
		</job>
		<jobname>StartActivity</jobname>
    </action>
	<action>
		<serviceId>urn:rboer-com:serviceId:Harmony1</serviceId>
		<name>ChangeChannel</name>
		<job>
			Harmony_ChangeChannel(lul_settings.newChannel or "")
			return 4,nil
		</job>
		<jobname>StartActivity</jobname>
    </action>
	<action>
		<serviceId>urn:rboer-com:serviceId:Harmony1</serviceId>
		<name>GetCurrentActivityID</name>
		<run>
			Harmony_GetCurrentActivtyID()
		</run>
    </action>
	<action>
		<serviceId>urn:rboer-com:serviceId:Harmony1</serviceId>
		<name>SetHubPolling</name>
		<run>
			Harmony_SetHubPolling(lul_settings.newPollFlag or "0")
		</run>
    </action>
	<action>
		<serviceId>urn:rboer-com:serviceId:Harmony1</serviceId>
		<name>FindActivityByName</name>
		<run>
			Harmony_FindActivityByName(lul_settings.ActivityName or "")
		</run>
    </action>
	<action>
		<serviceId>urn:rboer-com:serviceId:Harmony1</serviceId>
		<name>FindActivityByID</name>
		<run>
			Harmony_FindActivityByID(lul_settings.ActivityID or "0")
		</run>
    </action>
	<action>
		<serviceId>urn:rboer-com:serviceId:Harmony1</serviceId>
		<name>FindDeviceByName</name>
		<run>
			Harmony_FindDeviceByName(lul_settings.DeviceName or "")
		</run>
    </action>
	<action>
		<serviceId>urn:rboer-com:serviceId:Harmony1</serviceId>
		<name>FindDeviceByID</name>
		<run>
			Harmony_FindDeviceyByID(lul_settings.DeviceID or "0")
		</run>
    </action>
	<action>
		<serviceId>urn:rboer-com:serviceId:Harmony1</serviceId>
		<name>UpdateButtons</name>
		<job>
			Harmony_UpdateButtons(lul_device)
			return 4,nil
		</job>
		<jobname>UpdateButtons</jobname>
    </action>
	<action>
		<serviceId>urn:rboer-com:serviceId:Harmony1</serviceId>
		<name>IssueDeviceCommand</name>
		<job>
			Harmony_IssueDeviceCommand(lul_settings.DeviceID or "", lul_settings.Command or "", lul_settings.Duration or "0")
			return 4,nil
		</job>
		<jobname>IssueDeviceCommand</jobname>
	</action>
	<action>
        <serviceId>urn:upnp-org:serviceId:SwitchPower1</serviceId>
		<name>SetTarget</name>
		<job>
log.Debug("1..")		
			local newTarget = lul_settings.newTargetValue or ""
			local curTarget = var.Get("Target", HData.SIDS.SP)
log.Debug("SetTarget new %s cur %s",newTarget,curTarget)	
			if (newTarget ~= curTarget) then
				if (newTarget == '1') then 
					local newActivityID = var.Get('DefaultActivity') 
					if (newActivityID ~= '') then 
						Harmony_StartActivity(newActivityID)
					end	
				else 
					Harmony_PowerOff()
				end
			end
			return 4,nil
		</job>
		<jobname>SetTarget</jobname>
    </action>
	<action>
		<serviceId>urn:rboer-com:serviceId:HarmonyDevice1</serviceId>
		<name>UpdateDeviceButtons</name>
		<job>
			Harmony_UpdateDeviceButtons(lul_device)
			return 4,nil
		</job>
		<jobname>UpdateDeviceButtons</jobname>
	</action>
	<action>
		<serviceId>urn:rboer-com:serviceId:HarmonyDevice1</serviceId>
		<name>SendDeviceCommand</name>
		<job>
			Harmony_SendDeviceCommand(lul_device,lul_settings.Command or "",lul_settings.Duration or "0")
			return 4,nil
			</job>
		<jobname>SendDeviceCommand</jobname>
	</action>
  </actionList>
</implementation>
